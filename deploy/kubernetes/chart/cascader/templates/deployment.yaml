apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "chart.fullname" . }}
  labels:
    {{- include "chart.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      {{- include "chart.selectorLabels" . | nindent 8 }}
  template:
    metadata:
      labels:
        {{- include "chart.selectorLabels" . | nindent 8 }}
      annotations:
        {{- toYaml .Values.podAnnotations | nindent 8 }}
    spec:
      serviceAccountName: {{ include "chart.serviceAccountName" . }}
      imagePullSecrets:
        {{- toYaml .Values.imagePullSecrets | nindent 8 }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: cascader
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          env:
            {{- range .Values.env }}
            - name: {{ .name }}
              value: {{ .value | quote }}
            {{- end }}
          ports:
            - name: metrics
              containerPort: 8443
              protocol: TCP
            - name: probes
              containerPort: 8081
              protocol: TCP
          args:
            {{- if not .Values.metrics.enabled }}
            - --metrics-enabled=false
            {{- end }}
            {{- if .Values.leaderElection.enabled }}
            - --leader-elect
            {{- end }}
            {{- if and .Values.annotationKeys .Values.annotationKeys.deployment }}
            - --deployment-annotation={{ .Values.annotationKeys.deployment }}
            {{- end }}
            {{- if and .Values.annotationKeys .Values.annotationKeys.statefulset }}
            - --statefulset-annotation={{ .Values.annotationKeys.statefulset }}
            {{- end }}
            {{- if and .Values.annotationKeys .Values.annotationKeys.daemonset }}
            - --daemonset-annotation={{ .Values.annotationKeys.daemonset }}
            {{- end }}
            {{- if and .Values.annotationKeys .Values.annotationKeys.requeueAfter }}
            - --requeue-after-annotation={{ .Values.annotationKeys.requeueAfter }}
            {{- end }}
            {{- if .Values.requeueAfterDefault }}
            - --requeueAfterDefault={{ .Values.requeueAfterDefault }}
            {{- end }}
            {{- if eq .Values.logging.format "console" }}
            - --log-devel
            {{- end }}
            - --log-encoder={{ .Values.logging.format }}
            {{- range .Values.extraArgs }}
            - {{ . }}
            {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if .Values.startupProbe.enabled }}
          startupProbe:
            {{- toYaml .Values.startupProbe.spec | nindent 12 }}
          {{- end }}
          {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe.spec | nindent 12 }}
          {{- end }}
          {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe.spec | nindent 12 }}
          {{- end }}
        {{- if .Values.sidecars }}
          {{- toYaml .Values.sidecars | nindent 8 }}
        {{- end }}
      nodeSelector:
        {{- toYaml .Values.nodeSelector | nindent 8 }}
      tolerations:
        {{- toYaml .Values.tolerations | nindent 8 }}
      affinity:
        {{- toYaml .Values.affinity | nindent 8 }}
      terminationGracePeriodSeconds: 10

